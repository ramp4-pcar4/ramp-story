import{r_ as $,th as C,c as t,d as i,a3 as J,ho as S,lx as g,r$ as G,j as F,cY as P,ot as H,B as W,z as k,aU as A,nW as L,ht as I,kz as Q,nU as Y,s0 as K,aa as X,M as Z,cP as j,c9 as M}from"./story-DE9AooAy.js";import{u as ee,i as te}from"./featureReferenceUtils-BtZXLS60-ByHv368y.js";import{d as ie}from"./Analysis-DKuyhf4S-walHf6Vx.js";import"./main-CsLUkpBy.js";import"./sphere-_Zcui0FU-CoSuXPKk.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./plane-B2J4G_40-YEDqrpJy.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./IntersectorInterfaces-CrXe7z5S-tY6PKd-m.js";import"./boundedPlane-DPc-vTSV-DmaZ3JQ4.js";import"./lineSegment-CMEPBlyR-BAB-eRfw.js";let o=class extends $(Q){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return C(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&ee(this.feature,e.feature)}};t([i({type:J,json:{write:!0}})],o.prototype,"observer",void 0),t([i({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],o.prototype,"farDistance",void 0),t([i({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),S(e=>g.normalize(G(e),void 0,!0))],o.prototype,"heading",void 0),t([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"tilt",void 0),t([i({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],o.prototype,"horizontalFieldOfView",void 0),t([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"verticalFieldOfView",void 0),t([i(te)],o.prototype,"feature",void 0),t([i({json:{read:!1}})],o.prototype,"isValid",null),o=t([F("esri.analysis.Viewshed")],o);const T=o,R=P.ofType(T);let p=class extends ie{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},L))}get viewsheds(){return this._get("viewsheds")||new R}set viewsheds(e){this._set("viewsheds",Y(e,this.viewsheds,R))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const r=this.viewsheds.filter(s=>s.observer!=null),y=r.map(s=>s.observer).toArray(),a=K(y,e);return a.pending!=null?{pending:a.pending,extent:null}:{pending:null,extent:a.geometries.map((s,u)=>{const x=r.at(u);return s!=null&&x!=null?this._computeViewshedExtent(this.viewsheds.at(u),s):null}).filter(s=>s!=null).reduce((s,u)=>se(s,u),null)}}_computeViewshedExtent(e,r){const{farDistance:y,heading:a,tilt:s,horizontalFieldOfView:u,verticalFieldOfView:x}=e,{spatialReference:_}=r,b=u/2,V=x/2,O=y/_.metersPerUnit,B=[g.normalize(a-b),a,g.normalize(a+b)],d=X.fromPoint(r),v=m=>{const h=B.map(l=>g.normalize(l-m));if(h[0]>h[2]||u===360)return O;const c=h.map(l=>Math.abs(l>180?360-l:l)).reduce((l,f)=>l>f?f:l);return c>90?0:O*Math.cos(j(c))};d.xmax+=v(90),d.xmin-=v(-90),d.ymax+=v(0),d.ymin-=v(180);const w=r.z;if(w!=null){let m=w,h=w;const c=s-90,l=M(c+V,-90,90),f=M(c-V,-90,90),z=_?.isGeographic?y:O;m+=z*N(l),h+=z*N(f);const U=q(V)*z,E=N(c)*U*(1-q(b));s<90&&(m-=E),s>90&&(h-=E),d.zmax=Math.max(m,w),d.zmin=Math.min(h,w)}return d}clear(){this.viewsheds.removeAll()}};function se(e,r){return e==null?r:r==null?e:e.union(r)}function q(e){return Math.cos(j(e))}function N(e){return Math.sin(j(e))}t([i({type:["viewshed"]})],p.prototype,"type",void 0),t([i({cast:H,type:R,nonNullable:!0})],p.prototype,"viewsheds",null),t([i({readOnly:!0})],p.prototype,"spatialReference",null),t([i()],p.prototype,"_extent",void 0),t([i({readOnly:!0})],p.prototype,"extent",null),t([i({readOnly:!0})],p.prototype,"requiredPropertiesForEditing",null),p=t([F("esri.analysis.ViewshedAnalysis")],p);const D=p;let n=class extends W(k(Z)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(A(()=>this.source,(e,r)=>{r!=null&&r.parent===this&&(r.parent=null),e!=null&&(e.parent=this)},L))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new D)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,r,y,a){r.viewsheds=e.filter(s=>s.isValid()).map(s=>s.toJSON(a)).toJSON()}};t([i({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([i({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([i({nonNullable:!0})],n.prototype,"source",void 0),t([i({readOnly:!0})],n.prototype,"spatialReference",null),t([i({readOnly:!0})],n.prototype,"fullExtent",null),t([i({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([i({type:["show","hide"]})],n.prototype,"listMode",void 0),t([i({type:P.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([I("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([F("esri.layers.ViewshedLayer")],n);const me=n;export{me as default};
