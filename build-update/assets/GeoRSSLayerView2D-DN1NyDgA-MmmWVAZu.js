import{aU as h,iB as m,ki as g,cY as w,oq as d,or as f,os as n,c as u,j as b}from"./story-u82SUoyt.js";import{X as V,Y as S}from"./LayerView-DONYuvqR-B0sTbZPM.js";import{d as _}from"./GraphicContainer-DPQzFmqj-B88Mpe5r.js";import{X as T}from"./GraphicsView2D-DGP_h330-ClwJ5lUp.js";import"./main-CmCzAIzx.js";import"./Container-C-rqKhNk-Cy_50Ai2.js";import"./layerViewUtils-DyE3oc1e-By7kVODP.js";import"./AGraphicContainer-aPpZ1eAs-DmjPgpdc.js";import"./TechniqueInstance-DBGJNG3B-SR4_ABma.js";import"./UpdateTracking2D-swFQJIjy-DIMKE4HS.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./GeometryUtils-v59R1Z6F-CnoE8NEL.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./LabelMetric-DpMX58iW-DQjoeTGv.js";import"./Program-1XjJitsM-BYW2klMY.js";import"./BufferObject-DqJSjWFs-WjlyS7Z7.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-cAlFLh9R-DJ8bULVc.js";import"./TileContainer-C5yGwaDr-B9jGuACK.js";import"./WGLContainer-whJgsi2t-uiIX2w2R.js";import"./VertexArrayObject-C4kjI814-DyePhA9o.js";import"./ProgramTemplate-B_NcbdFz-CKaYh1g3.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-CovmM7Ch-CLqmXI8n.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./FeatureCommandQueue-F8dH-mVd-Dn6ySB5Z.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./AttributeStore-BysBgiw_-CB9Q5SC_.js";import"./TimeOnly-BR6daUyu-BGOh8DJt.js";import"./timeSupport-sB9XTwIv-CgIn3vO1.js";import"./normalizeUtilsSync-BGR0Mvo7-CSMe1U96.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(t=>{const i=this._popupTemplates.get(t),p=t.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=i;return p}).map(t=>({type:"graphic",graphic:t,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([h(()=>this.layer?.featureCollections,e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:t}of e){const i=g.fromJSON(o),p=new w(i.features),s=t.drawingInfo,c=r?d.fromJSON(r):null,a=f(s.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},m),h(()=>this.layer?.polygonSymbol,e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},m),h(()=>this.layer?.lineSymbol,e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},m),h(()=>this.layer?.pointSymbol,e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},m)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const re=y;export{re as default};
