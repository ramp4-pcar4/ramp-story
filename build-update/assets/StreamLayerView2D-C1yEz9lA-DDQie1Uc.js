import{aU as c,q as h,bI as d,T as m,ki as u,c as s,d as o,j as l,o8 as y}from"./story-u82SUoyt.js";import{n as _,r as g}from"./FeatureLayerView2D-BuwByqi6-DvQ_2aLD.js";import"./main-CmCzAIzx.js";import"./Container-C-rqKhNk-Cy_50Ai2.js";import"./timeSupport-m80hv0JM-DknxEefq.js";import"./LayerView-DONYuvqR-B0sTbZPM.js";import"./layerViewUtils-DyE3oc1e-By7kVODP.js";import"./TechniqueInstance-DBGJNG3B-SR4_ABma.js";import"./UpdateTracking2D-swFQJIjy-DIMKE4HS.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./GeometryUtils-v59R1Z6F-CnoE8NEL.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./LabelMetric-DpMX58iW-DQjoeTGv.js";import"./Program-1XjJitsM-BYW2klMY.js";import"./BufferObject-DqJSjWFs-WjlyS7Z7.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-cAlFLh9R-DJ8bULVc.js";import"./TileContainer-C5yGwaDr-B9jGuACK.js";import"./WGLContainer-whJgsi2t-uiIX2w2R.js";import"./VertexArrayObject-C4kjI814-DyePhA9o.js";import"./ProgramTemplate-B_NcbdFz-CKaYh1g3.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-CovmM7Ch-CLqmXI8n.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./FeatureCommandQueue-F8dH-mVd-Dn6ySB5Z.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./CircularArray-DaQg3PQl-BXS52LZy.js";import"./SDFHelper-DaBS7X2--CPRil9zb.js";import"./floatRGBA-CNeCgBBY-DIL-maEN.js";import"./HighlightCounter-DFWq7PnG-L3ompOf4.js";import"./popupUtils-CGEHI2En-HqOFREEw.js";import"./RefreshableLayerView-D30wcOhz-D40CUL5g.js";const f=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return s([o()],t.prototype,"_isUserPaused",void 0),s([o({readOnly:!0})],t.prototype,"connectionStatus",null),s([o({type:y})],t.prototype,"filter",void 0),t=s([l("esri.views.layers.StreamLayerView")],t),t};let n=class extends f(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([c(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),c(()=>this.layer.purgeOptions,()=>this._update()),c(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new h("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return d(e.map(i=>this.on(i,t)));const r=["data-received","message-received"].includes(e);r&&this.getWorker().then(i=>i.streamMessenger.enableEvent(e,!0));const p=super.on(e,t),a=this;return m(()=>{p.remove(),r&&(a._workerProxy.closed||a.hasEventListener(e)||a.getWorker().then(i=>i.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new h("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(p=>{const a=u.fromJSON(p);return a.features.forEach(i=>{i.layer=this.layer,i.sourceLayer=this.layer}),a}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};s([o()],n.prototype,"pipelineConnectionStatus",void 0),s([o()],n.prototype,"pipelineErrorString",void 0),s([o({readOnly:!0})],n.prototype,"connectionError",null),s([o({readOnly:!0})],n.prototype,"_streamConnectionStatus",null),n=s([l("esri.views.2d.layers.StreamLayerView2D")],n);const $=n;export{$ as default};
