import{c as s,d as i,s as w,cB as k,iX as I,gY as X,cD as l,ke as Y,ed as D,e8 as S,j as q,cI as B,kf as E,kg as G,hn as L,cP as O,kh as P,ag as N}from"./story-u82SUoyt.js";import{t as m}from"./mat4f64-Dn1WEGBx-C99QVUMW.js";import{b as p,_ as v,y as Q}from"./quat-Xt9oEsiT-Bb4pvhR4.js";import{e as f}from"./quatf64-C16JxGFv-BKWK1F8U.js";function e(t=$){return[t[0],t[1],t[2],t[3]]}function c(t,o,n=e()){return B(n,t),n[3]=o,n}function z(t,o=e()){const n=P(a,t);return j(o,N(v(o,n))),o}function y(t,o,n=e()){return p(a,t,h(t)),p(A,o,h(o)),Q(a,A,a),j(n,N(v(n,a)))}function C(t,o,n,g=e()){return c(E,t,u),c(G,o,d),c(L,n,M),y(u,d,u),y(u,M,g),g}function F(t){return t}function R(t){return t[3]}function h(t){return O(t[3])}function j(t,o){return t[3]=o,t}const $=[0,0,1,0],a=f(),A=f();e();const u=e(),d=e(),M=e();var x;let r=x=class extends w{constructor(t){super(t),this.translation=k(),this.rotationAxis=I($),this.rotationAngle=0,this.scale=X(1,1,1)}get rotation(){return c(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=R(t)}get localMatrix(){const t=m();return p(b,this.rotation,h(this.rotation)),Y(t,b,this.translation,this.scale),t}get localMatrixInverse(){return D(m(),this.localMatrix)}equals(t){return this===t||t!=null&&S(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new x(t)}};s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"translation",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAxis",void 0),s([i({type:Number,nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAngle",void 0),s([i({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"scale",void 0),s([i()],r.prototype,"rotation",null),s([i()],r.prototype,"localMatrix",null),s([i()],r.prototype,"localMatrixInverse",null),r=x=s([q("esri.geometry.support.MeshTransform")],r);const b=f(),H=r;export{H as $,z as R,C as S,F as U,h as c,e as s};
