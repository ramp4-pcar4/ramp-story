import{C as o,D as l}from"./utils-2iHN6TbU-CNNDRLEV.js";import{jU as c,jV as p,jW as i,jY as u}from"./story-DE9AooAy.js";import"./originUtils-BLsWtgV9-B4sclfuf.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./jsonContext-v1mRP0aL-BQHMYdCN.js";import"./saveUtils-BQy3eBhU-BUi0DYhH.js";import"./main-CsLUkpBy.js";const s="Image Service",v="imagery-layer-save",g="imagery-layer-save-as",f="imagery-tile-layer-save",d="imagery-tile-layer-save-as";function y(t){if(t.type==="imagery")return{isValid:!0};const{raster:e}=t,a=e?.datasetFormat==="Function"?e.primaryRasters?.rasters[0]:e;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function m(t){const e=t.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function T(t,e){const{parsedUrl:a,title:r,fullExtent:n}=t;e.url=a.path,e.title||=r;try{e.extent=await c(n)}catch{e.extent=void 0}p(e,i.METADATA),u(e,i.TILED_IMAGERY,t.type==="imagery-tile")}async function E(t,e){const a=t.type==="imagery"?v:f;return o({layer:t,itemType:s,validateLayer:y,createItemData:m,errorNamePrefix:a},e)}async function M(t,e,a){const r=t.type==="imagery"?g:d;return l({layer:t,itemType:s,validateLayer:y,createItemData:m,errorNamePrefix:r,newItem:e,setItemProperties:T},a)}export{E as save,M as saveAs};
