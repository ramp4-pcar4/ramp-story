import{c as i,d as r,a7 as _,ht as I,j as f,r_ as L,cY as x,h as N,L as R,y as M,B as b,$ as A,rf as j,z as D,ro as E,rp as J,kA as $,aV as U,ao as V,C as K,q as d,Q as v,E as P,rt as k,s as z,eE as Y,ip as q,sY as B,am as H,M as Q}from"./story-DE9AooAy.js";import{D as m}from"./persistable-DhwFrfNW-BnZy6y9_.js";import{Q as C,f as S}from"./SceneService-DQjtIpoK-ZNrckeS1.js";import{y as G,o as F,d as X,m as Z}from"./I3SLayerDefinitions-CS63UqqU-OQArZzu-.js";import{k as w,R as W,j as ee}from"./elevationInfoUtils-Cubp_PC_-h7rHDoxC.js";import"./main-CsLUkpBy.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-CvAjal1j-C3s65SV0.js";import"./originUtils-BLsWtgV9-B4sclfuf.js";import"./jsonContext-v1mRP0aL-BQHMYdCN.js";import"./resourceUtils-Djt21JsK-D1hRtS0u.js";import"./resourceUtils-PAYBmvyK-Dcqq-dzT.js";import"./saveUtils-BQy3eBhU-BUi0DYhH.js";var h;let n=h=class extends z{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,s,a){if(a.layer?.spatialReference&&!a.layer.spatialReference.equals(this.geometry.spatialReference)){if(!Y(e.spatialReference,a.layer.spatialReference))return void(a?.messages&&a.messages.push(new q("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:a.layer.spatialReference,context:a})));const l=new _;B(e,l,a.layer.spatialReference),t[s]=l.toJSON(a)}else t[s]=e.toJSON(a);delete t[s].spatialReference}clone(){return new h({geometry:H(this.geometry),type:this.type})}};i([r({type:_}),m()],n.prototype,"geometry",void 0),i([I(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),i([r({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=h=i([f("esri.layers.support.SceneModification")],n);const c=n;var p;let y=p=class extends L(x.ofType(c)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const s=new p;for(const a of e)s.add(c.fromJSON(a,t));return s}static async fromUrl(e,t,s){const a={url:N(e),origin:"service"},l=await R(e,{responseType:"json",signal:s?.signal}),O=t.toJSON(),u=[];for(const g of l.data)u.push(c.fromJSON({...g,geometry:{...g.geometry,spatialReference:O}},a));return new p({url:e,items:u})}};i([r({type:String})],y.prototype,"url",void 0),y=p=i([f("esri.layers.support.SceneModifications")],y);const T=y;let o=class extends C(M(b(A(j(D(E(J(Q)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles($(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,U))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,s){this._modificationsSource={url:V(e,s),context:s}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){K(s)}if(await this._fetchService(t),this._modificationsSource!=null){const s=await T.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(S.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(S.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";w(v.getLogger(this),W(t,"absolute-height",e)),w(v.getLogger(this),ee(t,e))}};i([r({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),i([r({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([r({type:G,readOnly:!0})],o.prototype,"nodePages",void 0),i([r({type:[F],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([r({type:[X],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([r({type:[Z],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([r({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([r({type:T}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),i([P(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),i([r(k)],o.prototype,"elevationInfo",null),i([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=i([f("esri.layers.IntegratedMeshLayer")],o);const he=o;export{he as default};
