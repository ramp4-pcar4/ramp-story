import{y as D,B as U,$ as z,rf as V,z as X,ro as W,rp as k,aj as g,aa as A,ag as b,gY as u,cN as G,cC as y,eo as L,cI as S,ck as I,et as E,hj as M,he as T,hd as c,q as $,C as R,L as B,Q as j,c as m,d as f,rt as P,G as q,j as C,M as F,cB as v}from"./story-u82SUoyt.js";import{k as N,R as H,j as Q}from"./elevationInfoUtils-Cubp_PC_-BI5Mp64B.js";import"./main-CmCzAIzx.js";let p=class extends D(U(z(V(X(W(k(F))))))){constructor(i){super(i),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new g({wkid:4326,vcsWkid:115700}),this.fullExtent=new A(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(i){this._set("elevationInfo",i),this._validateElevationInfo()}_verifyArray(i,r){if(!Array.isArray(i)||i.length<r)return!1;for(const o of i)if(typeof o!="number")return!1;return!0}_initFullExtent(i){const r=i.root?.boundingVolume;if(!r)return;if(r.box){const t=r?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=i.root?.transform,w=v();if(r.region&&this._verifyArray(r.region,6)){const t=r.region,l=b(t[0]),n=b(t[1]),s=t[4],a=b(t[2]),e=b(t[3]),h=t[5];this.fullExtent=new A({xmin:l,ymin:n,zmin:s,xmax:a,ymax:e,zmax:h,spatialReference:this.spatialReference})}else if(r.sphere&&this._verifyArray(r.sphere,4)){const t=r.sphere,l=u(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=v();G(s,l,u(n,n,n));const a=v();if(y(a,l,u(n,n,n)),o&&this._verifyArray(o,16)){const x=o;L(w,s,x),S(s,w),L(w,a,x),S(a,w)}I(s,E,0,s,g.WGS84,0),I(a,E,0,a,g.WGS84,0);const e=v(),h=v();M(e,s,a),T(h,s,a),this.fullExtent=new A({xmin:e[0],ymin:e[1],zmin:e[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}else if(r.box&&this._verifyArray(r.box,12)){const t=r.box,l=u(t[0],t[1],t[2]),n=u(t[3],t[4],t[5]),s=u(t[6],t[7],t[8]),a=u(t[9],t[10],t[11]),e=[];for(let d=0;d<8;++d)e.push(v());if(y(e[0],l,n),y(e[0],e[0],s),y(e[0],e[0],a),c(e[1],l,n),y(e[1],e[1],s),y(e[1],e[1],a),y(e[2],l,n),c(e[2],e[2],s),y(e[2],e[2],a),c(e[3],l,n),c(e[3],e[3],s),y(e[3],e[3],a),y(e[4],l,n),y(e[4],e[4],s),c(e[4],e[4],a),c(e[5],l,n),y(e[5],e[5],s),c(e[5],e[5],a),y(e[6],l,n),c(e[6],e[6],s),c(e[6],e[6],a),c(e[7],l,n),c(e[7],e[7],s),c(e[7],e[7],a),o&&this._verifyArray(o,16)){const d=o;for(let _=0;_<8;++_)L(e[_],e[_],d)}const h=u(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),x=u(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let d=0;d<8;++d)I(e[d],E,0,e[d],g.WGS84,0),M(x,x,e[d]),T(h,h,e[d]);this.fullExtent=new A({xmin:x[0],ymin:x[1],zmin:x[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}}async load(i){return this.addResolvingPromise(this._doLoad(i)),this}async _doLoad(i){const r=i!=null?i.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new $("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},i)}catch(o){R(o)}this.url&&await B(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(o=>{this._initFullExtent(o.data)},o=>{R(o)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const i=this.elevationInfo,r="Integrated mesh 3d tiles layers";N(j.getLogger(this),H(r,"absolute-height",i)),N(j.getLogger(this),Q(r,i))}};m([f({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),m([f({type:g})],p.prototype,"spatialReference",void 0),m([f({type:A})],p.prototype,"fullExtent",void 0),m([f(P)],p.prototype,"elevationInfo",null),m([f({type:["show","hide"]})],p.prototype,"listMode",void 0),m([f(q)],p.prototype,"url",void 0),m([f({readOnly:!0})],p.prototype,"type",void 0),m([f({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),m([f({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),m([f({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=m([C("esri.layers.IntegratedMesh3DTilesLayer")],p);const J=p;export{J as default};
