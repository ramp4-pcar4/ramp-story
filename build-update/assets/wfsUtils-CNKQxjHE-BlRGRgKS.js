import{L as b,iq as M,q as c,ir as $,S as x,is as C,it as T,aj as P,aH as D,iu as U,i8 as V,bD as y,iv as O,iw as j,aa as W,aO as Y,aQ as h}from"./story-u82SUoyt.js";import{h as q}from"./geojson-C0tfEHKN-DIvEiqIJ.js";import{l as S,t as g}from"./xmlUtils-TLuV3CJ7-Cs2DGP6C.js";const F="xlink:href",d="2.0.0",E="__esri_wfs_id__",X="wfs-layer:getWFSLayerTypeInfo-error",_="wfs-layer:empty-service",A="wfs-layer:feature-type-not-found",z="wfs-layer:geojson-not-supported",H="wfs-layer:kvp-encoding-not-supported",Q="wfs-layer:malformed-json",N="wfs-layer:unknown-geometry-type",J="wfs-layer:unknown-field-type",B="wfs-layer:unsupported-spatial-reference",K="wfs-layer:unsupported-wfs-version";async function Te(a,t){const e=Z((await b(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:d,...t?.customParameters},signal:t?.signal})).data);return ae(a,e),e}function Z(a){const t=G(a);fe(t),I(t);const e=t.firstElementChild,n=M(ne(e));return{operations:te(e),get featureTypes(){return Array.from(n())},readFeatureTypes:n}}const ee=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function R(a){for(const t of ee){const e=a.findIndex(n=>n.toLowerCase()===t);if(e>=0)return a[e]}return null}function te(a){let t=!1;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},n=[],s=[];if(S(a,{OperationsMetadata:{Parameter:r=>{if(r.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:i})=>{i&&n.push(i)}}}},Operation:r=>{switch(r.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:i=>{e.GetCapabilities.url=i.getAttribute(F)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:i=>{e.DescribeFeatureType.url=i.getAttribute(F)}}}};case"GetFeature":return{DCP:{HTTP:{Get:i=>{e.GetFeature.url=i.getAttribute(F)}}},Parameter:i=>{if(i.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:o})=>{o&&s.push(o)}}}}}}},Constraint:r=>{switch(r.getAttribute("name")){case"KVPEncoding":return{DefaultValue:i=>{t=i.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:i=>{e.GetFeature.supportsPagination=i.textContent.toLowerCase()==="true"}}}}}}),e.GetFeature.outputFormat=R(s)??R(n),!t)throw new c(H,"WFS service doesn't support key/value pair (KVP) encoding");if(e.GetFeature.outputFormat==null)throw new c(z,"WFS service doesn't support GeoJSON output format");return e}function ae(a,t){$(a)&&(x(a,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=C(t.operations.DescribeFeatureType.url)),x(a,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=C(t.operations.GetFeature.url)))}function k(a){const t=parseInt(a.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function ne(a){return g(a,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},n=new Set;return S(t,{Name:s=>{const{name:r,prefix:i}=w(s.textContent);e.typeName=`${i}:${r}`,e.name=r,e.namespacePrefix=i,e.namespaceUri=s.lookupNamespaceURI(i)},Abstract:s=>{e.description=s.textContent},Title:s=>{e.title=s.textContent},WGS84BoundingBox:s=>{e.extent=W.fromJSON(re(s))},DefaultCRS:s=>{const r=k(s);r&&(e.defaultSpatialReference=r,n.add(r))},OtherCRS:s=>{const r=k(s);r&&n.add(r)}}),e.title||(e.title=e.name),n.add(4326),e.supportedSpatialReferences.push(...n),e}}})}function re(a){let t,e,n,s;for(const r of a.children)switch(r.localName){case"LowerCorner":[t,e]=r.textContent.split(" ").map(i=>Number.parseFloat(i));break;case"UpperCorner":[n,s]=r.textContent.split(" ").map(i=>Number.parseFloat(i))}return{xmin:t,ymin:e,xmax:n,ymax:s,spatialReference:Y}}function se(a,t,e){return T(a,n=>e?n.name===t&&n.namespaceUri===e:n.typeName===t||n.name===t)}async function Se(a,t,e,n={}){const{featureType:s,extent:r}=await ie(a,t,e,n),{spatialReference:i}=ge(a.operations.GetFeature.url,s,n.spatialReference),{fields:o,geometryType:u,swapXY:p,objectIdField:l,geometryField:m}=await oe(a,s,i,n);return{url:a.operations.GetCapabilities.url,name:s.name,namespaceUri:s.namespaceUri,fields:o,geometryField:m,geometryType:u,objectIdField:l,spatialReference:n.spatialReference??new P({wkid:s.defaultSpatialReference}),extent:r,swapXY:p,wfsCapabilities:a,customParameters:n.customParameters}}async function ie(a,t,e,n={}){const s=a.readFeatureTypes(),r=t?se(s,t,e):s.next().value,{spatialReference:i=new P({wkid:r?.defaultSpatialReference})}=n;if(r==null)throw t?new c(A,`The type '${t}' could not be found in the service`):new c(_,"The service is empty");let o=r.extent;if(o&&!D(o.spatialReference,i))try{await U(o.spatialReference,i,void 0,n),o=V(o,i)}catch{throw new c(B,"Projection not supported")}return{extent:o,spatialReference:i,featureType:r}}async function oe(a,t,e,n={}){const{typeName:s}=t,[r,i]=await Promise.allSettled([le(a.operations.DescribeFeatureType.url,s,n),pe(a,s,e,n)]),o=f=>new c(X,`An error occurred while getting info about the feature type '${s}'`,{error:f});if(r.status==="rejected")throw o(r.reason);if(i.status==="rejected")throw o(i.reason);const{fields:u,errors:p}=r.value??{},l=r.value?.geometryType||i.value?.geometryType,m=i.value?.swapXY??!1;if(l==null)throw new c(N,`The geometry type could not be determined for type '${s}`,{typeName:s,geometryType:l,fields:u,errors:p});return{...ue(u??[]),geometryType:l,swapXY:m}}function ue(a){const t=a.find(n=>n.type==="geometry");let e=a.find(n=>n.type==="oid");return a=a.filter(n=>n.type!=="geometry"),e||(e=new y({name:E,type:"oid",alias:E}),a.unshift(e)),{geometryField:t?.name??null,objectIdField:e.name,fields:a}}async function pe(a,t,e,n={}){let s,r=!1;const[i,o]=await Promise.all([de(a.operations.GetFeature.url,t,e,a.operations.GetFeature.outputFormat,{...n,count:1}),b(a.operations.GetFeature.url,{responseType:"text",query:v(t,e,void 0,{...n,count:1}),signal:n?.signal})]),u=i.type==="FeatureCollection"&&i.features[0]?.geometry;if(u){let p;switch(s=O.fromJSON(q(u.type)),u.type){case"Point":p=u.coordinates;break;case"LineString":case"MultiPoint":p=u.coordinates[0];break;case"MultiLineString":case"Polygon":p=u.coordinates[0][0];break;case"MultiPolygon":p=u.coordinates[0][0][0]}const l=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(o.data);if(l){const m=p[0].toFixed(3),f=p[1].toFixed(3),L=parseFloat(l[1]).toFixed(3);m===parseFloat(l[2]).toFixed(3)&&f===L&&(r=!0)}}return{geometryType:s,swapXY:r}}async function le(a,t,e){return ce(t,(await b(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:d,TYPENAME:t,TYPENAMES:t,...e?.customParameters},signal:e?.signal})).data)}function ce(a,t){const{name:e}=w(a),n=G(t);I(n);const s=T(g(n.firstElementChild,{element:r=>r}),r=>r.getAttribute("name")===e);if(s!=null){const r=s.getAttribute("type"),i=r?T(g(n.firstElementChild,{complexType:o=>o}),o=>o.getAttribute("name")===w(r).name):T(g(s,{complexType:o=>o}),()=>!0);if(i)return ye(i)}throw new c(A,`Type '${a}' not found in document`,{document:new XMLSerializer().serializeToString(n)})}const me=new Set(["objectid","fid"]);function ye(a){const t=[],e=[];let n;const s=g(a,{complexContent:{extension:{sequence:{element:r=>r}}}});for(const r of s){const i=r.getAttribute("name");if(!i)continue;let o,u;if(r.hasAttribute("type")?o=w(r.getAttribute("type")).name:S(r,{simpleType:{restriction:m=>(o=w(m.getAttribute("base")).name,{maxLength:f=>{u=+f.getAttribute("value")}})}}),!o)continue;const p=r.getAttribute("nillable")==="true";let l=!1;switch(o.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new y({name:i,alias:i,type:"integer",nullable:p,length:h("integer")}));break;case"float":case"double":case"decimal":e.push(new y({name:i,alias:i,type:"double",nullable:p,length:h("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new y({name:i,alias:i,type:"string",nullable:p,length:u??h("string")}));break;case"datetime":case"date":e.push(new y({name:i,alias:i,type:"date",nullable:p,length:u??h("date")}));break;case"pointpropertytype":n="point",l=!0;break;case"multipointpropertytype":n="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":n="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":n="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,t.push(new c(N,`geometry type '${o}' is not supported`,{type:new XMLSerializer().serializeToString(a)}));break;default:t.push(new c(J,`Unknown field type '${o}'`,{type:new XMLSerializer().serializeToString(a)}))}l&&e.push(new y({name:i,alias:i,type:"geometry",nullable:p}))}for(const r of e)if(r.type==="integer"&&!r.nullable&&me.has(r.name.toLowerCase())){r.type="oid";break}return{geometryType:n,fields:e,errors:t}}async function de(a,t,e,n,s){let{data:r}=await b(a,{responseType:"text",query:v(t,e,n,s),signal:s?.signal});r=r.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(r)}catch(i){throw new c(Q,"Error while parsing theÂ response",{response:r,error:i})}}function v(a,t,e,n){const s=typeof t=="number"?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:d,TYPENAMES:a,OUTPUTFORMAT:e,SRSNAME:"EPSG:"+s,STARTINDEX:n?.startIndex,COUNT:n?.count,...n?.customParameters}}async function Fe(a,t,e){const n=await b(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:d,TYPENAMES:t,RESULTTYPE:"hits",...e?.customParameters},signal:e?.signal}),s=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(n.data);if(s?.groups)return+s.groups.numberMatched}function G(a){return new DOMParser().parseFromString(a.trim(),"text/xml")}function w(a){const[t,e]=a.split(":");return{prefix:e?t:"",name:e??t}}function fe(a){const t=a.firstElementChild?.getAttribute("version");if(t&&t!==d)throw new c(K,`Unsupported WFS version ${t}. Supported version: ${d}`)}function I(a){let t="",e="";if(S(a.firstElementChild,{Exception:n=>(t=n.getAttribute("exceptionCode"),{ExceptionText:s=>{e=s.textContent}})}),t)throw new c(`wfs-layer:${t}`,e)}function ge(a,t,e){const n={wkid:t.defaultSpatialReference},s=e?.wkid!=null?{wkid:e.wkid}:n;return{spatialReference:s,getFeatureSpatialReference:j(a)||s.wkid&&t.supportedSpatialReferences.includes(s.wkid)?{wkid:s.wkid}:{wkid:t.defaultSpatialReference}}}export{ue as G,de as I,ge as L,Fe as b,Se as l,Te as n,se as v,E as x};
