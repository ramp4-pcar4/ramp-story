import{q as T,eP as f,e4 as h,Q as U,gh as A,gi as Y,gj as L,e$ as B,g8 as P,b1 as R}from"./story-DE9AooAy.js";import"./Program-1XjJitsM-EcoGUBaj.js";import{n as k}from"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";let m=class p{constructor(t,e,r,i,n,o,a){this.instanceId=t,this.textureKey=e,this.indexStart=r,this.indexCount=i,this.vertexStart=n,this.vertexCount=o,this.overlaps=a}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new p(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,r,i,n,o,a,c){t.push(e),t.push(r),t.push(i),t.push(n),t.push(o),t.push(a),t.push(c)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),r=t.readInt32(),i=t.readInt32(),n=t.readInt32(),o=t.readInt32(),a=t.readInt32(),c=t.readInt32();return new p(e,r,i,n,o,a,c)}};m.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function I(s,t){if(t!==null){s.push(t.length);for(const e of t)e.serialize(s);return s}s.push(0)}function M(s,t,e){const r=s.readInt32(),i=new Array(r);for(let n=0;n<i.length;n++)i[n]=t.deserialize(s,e);return i}let H=class S{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),I(t,this.records),t}static deserialize(t){const e=t.readInt32(),r=t.readF32(),i=new S(e,r);return i.records=M(t,m)??[],i}};H.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+m.byteSizeHint;const x=()=>U.getLogger("esri.views.2d.engine.webgl.Utils");function K(s){switch(s){case f.UNSIGNED_BYTE:return 1;case f.UNSIGNED_SHORT_4_4_4_4:return 2;case f.FLOAT:return 4;default:return void x().error(new T("webgl-utils",`Unable to handle type ${s}`))}}function V(s){switch(s){case f.UNSIGNED_BYTE:return Uint8Array;case f.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case f.FLOAT:return Float32Array;default:return void x().error(new T("webgl-utils",`Unable to handle type ${s}`))}}function C(s){const t=new Map;for(const e in s){const r=s[e];let i=0;t.set(e,r.map(n=>{const o=new k(n.name,n.count,n.type,i,0,n.normalized||!1);return i+=n.count*A(n.type),o})),t.get(e).forEach(n=>n.stride=i)}return t}const v=s=>{const t=new Map;for(const e in s)for(const r of s[e])t.set(r.name,r.location);return t},O=s=>{const t={};return s.forEach((e,r)=>t[r]=e?.length?e[0].stride:0),t},d=new Map,j=(s,t)=>{if(!d.has(s)){const e=C(t),r={strides:O(e),bufferLayouts:e,attributes:v(t)};d.set(s,r)}return d.get(s)},Q=s=>s.includes("data:image/svg+xml");function J(s){const t=[];for(let e=0;e<s.length;e++)t.push(s.charCodeAt(e));return t}function Z(s,t,e){const r=new Y(t.width,t.height);return r.dataType=t.dataType,t.depth&&(r.depth=t.depth),t.flipped&&(r.flipped=t.flipped),t.hasMipmap&&(r.hasMipmap=t.hasMipmap),r.internalFormat=t.internalFormat,t.isImmutable&&(r.isImmutable=t.isImmutable),t.isOpaque&&(r.isOpaque=t.isOpaque),t.maxAnisotropy&&(r.maxAnisotropy=t.maxAnisotropy),r.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(r.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(r.samplingMode=t.samplingMode),t.target&&(r.target=t.target),r.uniform=t.uniform,t.unpackAlignment&&(r.unpackAlignment=t.unpackAlignment),t.wrapMode&&(r.wrapMode=t.wrapMode),new L(s,r,e)}function tt(s){return"url"in s&&"urlHash"in s?{...s,url:""}:s}class l{constructor(t,e,r,i){this.transformedX=0,this.transformedY=0,this.center=B(t,e),this.centerT=P(),this.halfWidth=r/2,this.halfHeight=i/2,this.width=r,this.height=i}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new l(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,e=4){const r=Math.abs(t.centerT[0]-this.centerT[0]),i=Math.abs(t.centerT[1]-this.centerT[1]),n=(t.halfWidth+this.halfWidth+e)/r,o=(t.halfHeight+this.halfHeight+e)/i,a=Math.min(n,o);return Math.log2(a)}extend(t){const e=Math.min(this.xmin,t.xmin),r=Math.min(this.ymin,t.ymin),i=Math.max(this.xmax,t.xmax)-e,n=Math.max(this.ymax,t.ymax)-r,o=e+i/2,a=r+n/2;this.width=i,this.height=n,this.halfWidth=i/2,this.halfHeight=n/2,this.x=o,this.y=a}static deserialize(t){const e=t.readF32(),r=t.readF32(),i=t.readInt32(),n=t.readInt32();return new l(e,r,i,n)}}const w=new Float32Array(1),z=new Uint32Array(w.buffer);function D(s){return w[0]=s,z[0]}function et(s,t){return 65535&s|t<<16}function y(s){const t=D(s),e=t>>>31;let r=t>>>23&255,i=8388607&t;return r-=127,r>15?e<<15|31744:r<-25?0:(r<-14&&(i+=8388608,i/=2**(-14-r),r=-15),r+=15,i/=8192,i=G(i,1023),e<<15|r<<10|i)}function G(s,t){const e=Math.floor(s),r=s-e;return e<t&&(r>.5||r===.5&&e%2==1)?e+1:e}function g(s){let t=s>>>15,e=s>>10&31,r=1023&s;return t=t?-1:1,e-=15,r/=1024,e>-15?r+=1:e=-14,t*2**e*r}function rt(s){const t=s.map(({name:e,count:r,type:i})=>`${e}.${r}.${i}`).join(",");return R(t)}function u(s,t,e,r,i,n,o){if(s.primitiveName===t){let a=r?.readWithDefault(i,n,s[e]&&o);return s.type==="text"&&(a=a.toString()),void(s[e]=a)}if("type"in s&&s.type!=null){if(s.effects)for(const a of s.effects)u(a,t,e,r,i,n,o);switch(s.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(s.symbolLayers)for(const a of s.symbolLayers)u(a,t,e,r,i,n,o);break;case"CIMTextSymbol":s.symbol&&u(s.symbol,t,e,r,i,n,o);break;case"CIMHatchFill":s.lineSymbol&&u(s.lineSymbol,t,e,r,i,n,o);break;case"CIMPictureMarker":case"CIMCharacterMarker":case"CIMVectorMarker":if(s.markerPlacement&&u(s.markerPlacement,t,e,r,i,n,o),s.type==="CIMVectorMarker"&&s.markerGraphics)for(const a of s.markerGraphics)u(a,t,e,r,i,n,o),u(a.symbol,t,e,r,i,n,o)}}}const W=400;function st(s){const t=s.width;return s.effects!=null?W:Math.max(1.25*t,8)}function it(s,t,e,r){const i=e.packPrecisionFactor??1;switch(e.type){case h.BYTE:if(e.count===1)s.setInt8(r+e.offset,t*i);else for(let n=0;n<e.count;n++){const o=n*Int8Array.BYTES_PER_ELEMENT;s.setInt8(r+e.offset+o,t[n]*i)}break;case h.UNSIGNED_BYTE:if(e.count===1)s.setUint8(r+e.offset,t*i);else for(let n=0;n<e.count;n++){const o=n*Uint8Array.BYTES_PER_ELEMENT;s.setUint8(r+e.offset+o,t[n]*i)}break;case h.SHORT:if(e.count===1)s.setInt16(r+e.offset,t*i,!0);else for(let n=0;n<e.count;n++){const o=n*Int16Array.BYTES_PER_ELEMENT;s.setInt16(r+e.offset+o,t[n]*i,!0)}break;case h.UNSIGNED_SHORT:if(e.count===1)s.setUint16(r+e.offset,t*i,!0);else for(let n=0;n<e.count;n++){const o=n*Uint16Array.BYTES_PER_ELEMENT;s.setUint16(r+e.offset+o,t[n]*i,!0)}break;case h.INT:if(e.count===1)s.setInt32(r+e.offset,t*i,!0);else for(let n=0;n<e.count;n++){const o=n*Int32Array.BYTES_PER_ELEMENT;s.setInt32(r+e.offset+o,t[n]*i,!0)}break;case h.UNSIGNED_INT:if(e.count===1)s.setUint32(r+e.offset,t*i,!0);else for(let n=0;n<e.count;n++){const o=n*Uint32Array.BYTES_PER_ELEMENT;s.setUint32(r+e.offset+o,t[n]*i,!0)}break;case h.FLOAT:if(e.count===1)s.setFloat32(r+e.offset,t*i,!0);else for(let n=0;n<e.count;n++){const o=n*Float32Array.BYTES_PER_ELEMENT;s.setFloat32(r+e.offset+o,t[n]*i,!0)}break;case h.HALF_FLOAT:if(e.count===1)s.setUint16(r+e.offset,y(t*i),!0);else for(let n=0;n<e.count;n++){const o=n*Uint16Array.BYTES_PER_ELEMENT;s.setUint16(r+e.offset+o,y(t[n]*i),!0)}}}function nt(s,t,e){switch(t.type){case h.BYTE:{if(t.count===1)return s.getInt8(e+t.offset);const r=[];for(let i=0;i<t.count;i++){const n=i*Int8Array.BYTES_PER_ELEMENT;r.push(s.getInt8(e+t.offset+n))}return r}case h.UNSIGNED_BYTE:{if(t.count===1)return s.getUint8(e+t.offset);const r=[];for(let i=0;i<t.count;i++){const n=i*Uint8Array.BYTES_PER_ELEMENT;r.push(s.getUint8(e+t.offset+n))}return r}case h.SHORT:{if(t.count===1)return s.getInt16(e+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const n=i*Int16Array.BYTES_PER_ELEMENT;r.push(s.getInt16(e+t.offset+n,!0))}return r}case h.UNSIGNED_SHORT:{if(t.count===1)return s.getUint16(e+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const n=i*Uint16Array.BYTES_PER_ELEMENT;r.push(s.getUint16(e+t.offset+n,!0))}return r}case h.INT:{if(t.count===1)return s.getInt32(e+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const n=i*Int32Array.BYTES_PER_ELEMENT;r.push(s.getInt32(e+t.offset+n,!0))}return r}case h.UNSIGNED_INT:{if(t.count===1)return s.getUint32(e+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const n=i*Uint32Array.BYTES_PER_ELEMENT;r.push(s.getUint32(e+t.offset+n,!0))}return r}case h.FLOAT:{if(t.count===1)return s.getFloat32(e+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const n=i*Float32Array.BYTES_PER_ELEMENT;r.push(s.getFloat32(e+t.offset+n,!0))}return r}case h.HALF_FLOAT:{if(t.count===1)return g(s.getUint16(e+t.offset,!0));const r=[];for(let i=0;i<t.count;i++){const n=i*Uint16Array.BYTES_PER_ELEMENT;r.push(g(s.getUint16(e+t.offset+n,!0)))}return r}}}class F{constructor(t,e,r,i,n,o,a,c,E=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=r,this.directionX=i,this.directionY=n,this.maxScale=o,this.minScale=a,this.referenceBounds=c,this.bounds=E}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),I(t,this.bounds)}static deserialize(t){const e=t.readInt32(),r=t.readF32(),i=t.readF32(),n=t.readF32(),o=t.readF32(),a=t.readF32(),c=t.readF32(),E=t.readF32(),_=t.readF32(),b=t.readF32(),N=M(t,l)??[];return new F(e,r,i,n,o,a,c,{size:E,offsetX:_,offsetY:b},N)}}export{Z as $,K as C,j as D,m as E,tt as K,H as M,rt as Q,F as T,et as V,Q as W,J as X,it as e,u as h,l,M as p,nt as s,st as t,V as v};
