import{y as i}from"./utils-9sQxfkoa-Ckf6anuL.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-jsGyucFe.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BOhRDciW.js";import"./story-BRwEvu2S.js";import"./main-BqOhRcj8.js";import"./normalizeUtils-Bxmy9MNI-VEOszO_r.js";import"./normalizeUtilsCommon-CRJlkfEA-NtgUZ0-a.js";import"./utils-Bq23Xwmj-BbINsurJ.js";import"./query-DFW9-NG_-uqHLKPrz.js";import"./pbfQueryUtils-F4ZE8-K8-Dtj4-rg0.js";import"./pbf-D-y3_eZO-DQnwPgYV.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DH5FmeaG.js";import"./projection-BA9M1R7d-cWsUMj6A.js";import"./projectBuffer-CvCBvJ6W-CbGU9o22.js";import"./TimeExtent-Cn0Jofqr--9ucgkmY.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
