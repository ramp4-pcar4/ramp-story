import{y as i}from"./utils-9sQxfkoa-DONXkXa8.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DYSrTODt.js";import a from"./TopFeaturesQuery-Ckj_IYM7-D_mKv3kg.js";import"./story-BXuU6Aew.js";import"./main-CQNsJjbK.js";import"./normalizeUtils-Bxmy9MNI-BymMe95E.js";import"./normalizeUtilsCommon-CRJlkfEA-vTDdtOUY.js";import"./utils-Bq23Xwmj-BgELbzLd.js";import"./query-DFW9-NG_-C57_tBW5.js";import"./pbfQueryUtils-F4ZE8-K8-g0opPbMt.js";import"./pbf-D-y3_eZO-xSGWWisG.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CpskB-nO.js";import"./projection-BA9M1R7d-D6pRMyL8.js";import"./projectBuffer-CvCBvJ6W-CjoMYM8p.js";import"./TimeExtent-Cn0Jofqr-DCPC8P7Y.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
