import{y as i}from"./utils-9sQxfkoa-CjNZjdKD.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Bmro_C6V.js";import a from"./TopFeaturesQuery-Ckj_IYM7-kxucpypG.js";import"./story-DULt3Rma.js";import"./main-Bm7g2Jde.js";import"./normalizeUtils-Bxmy9MNI-CZMTs6Vg.js";import"./normalizeUtilsCommon-CRJlkfEA-CgRBIB_J.js";import"./utils-Bq23Xwmj-DhZYu3yh.js";import"./query-DFW9-NG_-DqquB_ii.js";import"./pbfQueryUtils-F4ZE8-K8-DpF92BrR.js";import"./pbf-D-y3_eZO-D-TFO35M.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CHuA90gs.js";import"./projection-BA9M1R7d-DvHr0GeG.js";import"./projectBuffer-CvCBvJ6W-Cc8J4MEJ.js";import"./TimeExtent-Cn0Jofqr-DWlRQ-Qn.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
