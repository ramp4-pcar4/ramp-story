import{y as i}from"./utils-9sQxfkoa-DMD1YNOp.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Bg_GnZuz.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BkxM4kg1.js";import"./story-BLxSf89q.js";import"./main-CYSS3xlj.js";import"./normalizeUtils-Bxmy9MNI-CzhvWcX3.js";import"./normalizeUtilsCommon-CRJlkfEA-BRSq5sv4.js";import"./utils-Bq23Xwmj-xpQmTUAE.js";import"./query-DFW9-NG_-DYR5VVWR.js";import"./pbfQueryUtils-F4ZE8-K8-DAaZgW0v.js";import"./pbf-D-y3_eZO-DSN-JUIg.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C8FOMxEA.js";import"./projection-BA9M1R7d-CPQOwsSQ.js";import"./projectBuffer-CvCBvJ6W-BwklEwff.js";import"./TimeExtent-Cn0Jofqr-BCYLzpIt.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
