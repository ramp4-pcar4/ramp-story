import{y as i}from"./utils-9sQxfkoa-CyzxrrMV.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Cr1tTnuX.js";import a from"./TopFeaturesQuery-Ckj_IYM7-x1iMMxPd.js";import"./story-BkQiLBxm.js";import"./main-BW-KQ4QQ.js";import"./normalizeUtils-Bxmy9MNI-CQJmL2u9.js";import"./normalizeUtilsCommon-CRJlkfEA-BgZP86r9.js";import"./utils-Bq23Xwmj-DUQSW4fn.js";import"./query-DFW9-NG_-B56yQKZH.js";import"./pbfQueryUtils-F4ZE8-K8-B_Zo-aKE.js";import"./pbf-D-y3_eZO-COVS1kIL.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-XufEjx25.js";import"./projection-BA9M1R7d-AQqrh96z.js";import"./projectBuffer-CvCBvJ6W-RY9fiKFM.js";import"./TimeExtent-Cn0Jofqr-CCQT7v5L.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
