import{y as i}from"./utils-9sQxfkoa-CkPnEg1h.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Dz9A0PLt.js";import a from"./TopFeaturesQuery-Ckj_IYM7-wvqy1Cr_.js";import"./story-Cy-zipT1.js";import"./main-CY7W3Omr.js";import"./normalizeUtils-Bxmy9MNI-BMWeU48z.js";import"./normalizeUtilsCommon-CRJlkfEA-BGAO9xfw.js";import"./utils-Bq23Xwmj-ChXGIa4H.js";import"./query-DFW9-NG_-C3BKBCpt.js";import"./pbfQueryUtils-F4ZE8-K8-CpVuYKok.js";import"./pbf-D-y3_eZO-CZEvZc1t.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BHFw_zSp.js";import"./projection-BA9M1R7d-DooC67Ok.js";import"./projectBuffer-CvCBvJ6W-C0SQlNo1.js";import"./TimeExtent-Cn0Jofqr-C0edBkqU.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
