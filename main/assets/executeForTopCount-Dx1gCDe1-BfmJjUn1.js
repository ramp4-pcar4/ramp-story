import{y as i}from"./utils-9sQxfkoa-DyaA1vS9.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-INsduvug.js";import a from"./TopFeaturesQuery-Ckj_IYM7-mQxN8RM6.js";import"./story-CVk-3aMF.js";import"./main-Cvw62Kwy.js";import"./normalizeUtils-Bxmy9MNI-CXneOESN.js";import"./normalizeUtilsCommon-CRJlkfEA-D_mVrJEe.js";import"./utils-Bq23Xwmj-CG3BpvtB.js";import"./query-DFW9-NG_-Bj2rnQbS.js";import"./pbfQueryUtils-F4ZE8-K8-D__JEphu.js";import"./pbf-D-y3_eZO-ClaK91jf.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CfLmriQH.js";import"./projection-BA9M1R7d-DtG_o8oX.js";import"./projectBuffer-CvCBvJ6W-Bplii-Dc.js";import"./TimeExtent-Cn0Jofqr-BHktnZsi.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
