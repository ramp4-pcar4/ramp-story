import{y as i}from"./utils-9sQxfkoa-BVCNLAjT.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CxK5nk49.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BbeQLc2H.js";import"./story-CpfXl0AZ.js";import"./main-CtRy8FqL.js";import"./normalizeUtils-Bxmy9MNI-Cmdf3HlM.js";import"./normalizeUtilsCommon-CRJlkfEA-nP7jATWk.js";import"./utils-Bq23Xwmj-DfHEE06c.js";import"./query-DFW9-NG_-BvAPfaUq.js";import"./pbfQueryUtils-F4ZE8-K8-I2qGqU76.js";import"./pbf-D-y3_eZO-3UJGMxx8.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-Bwhspp2R.js";import"./projection-BA9M1R7d-CP5QudOM.js";import"./projectBuffer-CvCBvJ6W-BubgUgr7.js";import"./TimeExtent-Cn0Jofqr-4VoXSUEW.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
