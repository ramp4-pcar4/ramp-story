import{y as i}from"./utils-9sQxfkoa-CjtRW8Ik.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Tpf8J8Z-.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DavI5yzV.js";import"./story-1yP3Voaz.js";import"./main-COtsf3MT.js";import"./normalizeUtils-Bxmy9MNI-BtqiOc7f.js";import"./normalizeUtilsCommon-CRJlkfEA-Dx61M8wJ.js";import"./utils-Bq23Xwmj-D6hyVCBK.js";import"./query-DFW9-NG_-g8HEX-eq.js";import"./pbfQueryUtils-F4ZE8-K8-PATIH3Qw.js";import"./pbf-D-y3_eZO-Dc87XZf-.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-MZNMKG3d.js";import"./projection-BA9M1R7d-To-xckeI.js";import"./projectBuffer-CvCBvJ6W-cCVXiFCY.js";import"./TimeExtent-Cn0Jofqr-BJq5Eud0.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
