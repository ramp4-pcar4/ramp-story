import{y as i}from"./utils-9sQxfkoa-CwJW9dca.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-ChckWHgQ.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Bpv1sLOF.js";import"./story-DT1Ep1ux.js";import"./main-BTdHgocv.js";import"./normalizeUtils-Bxmy9MNI-CU9ui3_0.js";import"./normalizeUtilsCommon-CRJlkfEA-B1kxVr8K.js";import"./utils-Bq23Xwmj-Csxw19qV.js";import"./query-DFW9-NG_-SSagAgRu.js";import"./pbfQueryUtils-F4ZE8-K8-Psrw5bE3.js";import"./pbf-D-y3_eZO-CKuZ8F1K.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BSxy2N4g.js";import"./projection-BA9M1R7d-DTN1X2Bt.js";import"./projectBuffer-CvCBvJ6W-CMjj6oJy.js";import"./TimeExtent-Cn0Jofqr-BFc609ot.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
