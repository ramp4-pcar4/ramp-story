import{y as i}from"./utils-9sQxfkoa-Dda1TVED.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-5lvZFspS.js";import a from"./TopFeaturesQuery-Ckj_IYM7-TXfvHD38.js";import"./story-DfT1JADo.js";import"./main-DG75X1yT.js";import"./normalizeUtils-Bxmy9MNI-tO_EG9Uz.js";import"./normalizeUtilsCommon-CRJlkfEA-39WcoMLt.js";import"./utils-Bq23Xwmj-CnS-P89q.js";import"./query-DFW9-NG_-BwGewJlV.js";import"./pbfQueryUtils-F4ZE8-K8-BWB0Xru4.js";import"./pbf-D-y3_eZO-BFD2vFFT.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DvBFaxp_.js";import"./projection-BA9M1R7d-CG_FnTtX.js";import"./projectBuffer-CvCBvJ6W-CzvTfQZJ.js";import"./TimeExtent-Cn0Jofqr-ACabGTnI.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
