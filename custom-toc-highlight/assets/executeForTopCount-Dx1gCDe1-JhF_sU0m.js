import{y as i}from"./utils-9sQxfkoa-KicvrT8N.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DYmbt-VV.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DcxQU3dQ.js";import"./story-BfX8CRfG.js";import"./main-ugzBrWNm.js";import"./normalizeUtils-Bxmy9MNI-BT8FD-bF.js";import"./normalizeUtilsCommon-CRJlkfEA-D0uk_F2q.js";import"./utils-Bq23Xwmj--_SaacS5.js";import"./query-DFW9-NG_-gbjlxRZk.js";import"./pbfQueryUtils-F4ZE8-K8-Bro2SuOq.js";import"./pbf-D-y3_eZO-DQKnyfOm.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-B5UMbu5B.js";import"./projection-BA9M1R7d-BYoCXVXt.js";import"./projectBuffer-CvCBvJ6W-dLD7ajBt.js";import"./TimeExtent-Cn0Jofqr-D2z4zFxu.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
