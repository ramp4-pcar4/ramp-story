import{y as i}from"./utils-9sQxfkoa-Y4LaPpWa.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-jYpjMSVG.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BeiNItE7.js";import"./story-Bt7S1l82.js";import"./main-BdQb56MT.js";import"./normalizeUtils-Bxmy9MNI-CWD6CTtB.js";import"./normalizeUtilsCommon-CRJlkfEA-B5vK2WOv.js";import"./utils-Bq23Xwmj-oFDbQYij.js";import"./query-DFW9-NG_-DJrNYIAc.js";import"./pbfQueryUtils-F4ZE8-K8-goeccD3s.js";import"./pbf-D-y3_eZO-sXzVj70w.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CzqJvjH6.js";import"./projection-BA9M1R7d-C0b1sRwz.js";import"./projectBuffer-CvCBvJ6W-B6Kj6ANP.js";import"./TimeExtent-Cn0Jofqr-DrPnDxV-.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
