import{y as i}from"./utils-9sQxfkoa-BIkzD6xJ.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DV9zPYKe.js";import a from"./TopFeaturesQuery-Ckj_IYM7-sEuBj8zi.js";import"./story-CqzOZAFN.js";import"./main-jn20pd5b.js";import"./normalizeUtils-Bxmy9MNI-8zWW_Axc.js";import"./normalizeUtilsCommon-CRJlkfEA-yYX157n0.js";import"./utils-Bq23Xwmj-D9xLuC35.js";import"./query-DFW9-NG_-i8M-MSND.js";import"./pbfQueryUtils-F4ZE8-K8-BQ5Hxg_i.js";import"./pbf-D-y3_eZO-C6Sh_C81.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-GAwPeRhj.js";import"./projection-BA9M1R7d-Bb6He4B9.js";import"./projectBuffer-CvCBvJ6W-B2MCidMM.js";import"./TimeExtent-Cn0Jofqr-BktY_eU3.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
